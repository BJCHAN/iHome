apply plugin: 'com.android.application'
apply plugin: 'me.tatarka.retrolambda'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'walle'

retrolambda {
    javaVersion JavaVersion.VERSION_1_7
}
android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.tianchuang.ihome_b"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        multiDexEnabled true
    }

    //签名
    signingConfigs {
        release {
            storeFile file("tianchuang.keystore")
            storePassword "666666"
            keyAlias "tianchuang"
            keyPassword "666666"
        }
    }

    buildTypes {
        release {
            signingConfig signingConfigs.release
            zipAlignEnabled true//内存对齐
            minifyEnabled true//混淆
            shrinkResources true//资源压缩
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        debug {
            minifyEnabled false
            zipAlignEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }

    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }
    dexOptions {
        jumboMode true
        javaMaxHeapSize "4g"  //增加java堆内存大小
    }

    lintOptions {
        checkReleaseBuilds false
        abortOnError false
        ignoreWarnings true
    }
    compileOptions {
        targetCompatibility 1.8
        sourceCompatibility 1.8
    }

}

repositories {
    mavenCentral()
    flatDir {
        dirs 'aars'
    }
}

dependencies {
    //todo 调试工具,正式发布时去掉
    //检查内存泄露
    compile fileTree(include: ['*.jar'], dir: 'libs')
    compile('com.github.afollestad.material-dialogs:commons:0.8.5.7@aar') {
        transitive = true
    }
    compile project(':photoviewlibrary')
    //cardView
    compile "com.android.support:appcompat-v7:${supportLibVersion}"
    compile "com.android.support:design:${supportLibVersion}"
    compile "com.android.support:cardview-v7:${supportLibVersion}"
    //rx的库
    //数据库
    //加验证的库
    //zxing扫码
    //图片选择器
    //气泡背景框
    compile 'com.meituan.android.walle:library:1.1.3'//多渠道打包
    compile 'com.facebook.stetho:stetho:1.3.1'
    compile 'com.facebook.stetho:stetho-okhttp3:1.3.1'
    compile 'com.android.support.constraint:constraint-layout:1.0.2'
    compile 'org.greenrobot:eventbus:3.0.0'
    compile 'io.reactivex.rxjava2:rxandroid:2.0.1'
    compile 'io.reactivex.rxjava2:rxjava:2.1.0'
    compile 'com.jakewharton.rxbinding2:rxbinding:2.0.0'
    compile 'com.trello.rxlifecycle2:rxlifecycle:2.0.1'
    compile 'com.trello.rxlifecycle2:rxlifecycle-android:2.0.1'
    compile 'com.squareup.retrofit2:adapter-rxjava2:2.2.0'
    compile 'com.tbruyelle.rxpermissions2:rxpermissions:0.9.4@aar'
    compile 'com.github.CymChad:BaseRecyclerViewAdapterHelper:v2.8.2'
    compile 'com.orhanobut:logger:1.11'
    compile 'org.litepal.android:core:1.4.1'
    compile 'net.oauth.core:oauth:20100527'
    compile 'cn.yipianfengye.android:zxing-library:2.0'
    compile 'com.yuyh.imgsel:library:1.3.8'
    compile 'com.daasuu:BubbleLayout:1.1.1'
    compile 'com.contrarywind:Android-PickerView:3.1.1'
    compile 'q.rorbin:badgeview:1.1.0'
    compile 'com.jakewharton:butterknife:8.1.0'
    testCompile 'junit:junit:4.12'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.1.0'
    testCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    debugCompile 'com.squareup.leakcanary:leakcanary-android:1.5'
    releaseCompile 'com.squareup.leakcanary:leakcanary-android-no-op:1.5'
    compile "org.jetbrains.kotlin:kotlin-stdlib-jre7:$kotlin_version"

}
/**
 * 打包命令
 * 生成单个渠道包 ./gradlew clean assembleReleaseChannels -PchannelList=meituan
 * 支持 productFlavors ./gradlew clean assembleMeituanReleaseChannels -PchannelList=meituan
 * 生成多个渠道包 ./gradlew clean assembleReleaseChannels -PchannelList=meituan,dianping
 * 通过渠道配置文件来生成渠道包 ./gradlew clean assembleReleaseChannels -PchannelFile=channel(写全路径)
 **/
walle {
    // 指定渠道包的输出路径
    apkOutputFolder = new File("${project.buildDir}/outputs/channels");
    // 定制渠道包的APK的文件名称
    apkFileNameFormat = 'i家帮员工端-${channel}-${buildType}-v${versionName}-${versionCode}-${buildTime}.apk';
    // 渠道配置文件
    channelFile = new File("${project.getProjectDir()}/channel")

}
